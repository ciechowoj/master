#pragma once

#include <glm/glm.hpp>
#include <glm/gtc/constants.hpp>
#include <glm/gtc/epsilon.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtx/transform.hpp>
#include <glm/gtx/norm.hpp>

namespace haste {

using namespace glm;

}

template <class Stream> Stream& operator<<(Stream& stream, const glm::vec2& v) {
    return stream << "[" << v.x << ", " << v.y << "]";
}

template <class Stream> Stream& operator<<(Stream& stream, const glm::vec3& v) {
    return stream << "[" << v.x << ", " << v.y << ", " << v.z << "]";
}

template <class Stream> Stream& operator<<(Stream& stream, const glm::vec4& v) {
    return stream << "[" << v.x << ", " << v.y << ", " << v.z << ", " << v.w << "]";
}

template <class Stream> Stream& operator<<(Stream& stream, const glm::mat4& v) {
    return stream
    	<< "[" << v[0][0] << ", " << v[1][0] << ", " << v[2][0] << ", " << v[3][0] << "]\n"
    	<< "[" << v[0][1] << ", " << v[1][1] << ", " << v[2][1] << ", " << v[3][1] << "]\n"
    	<< "[" << v[0][2] << ", " << v[1][2] << ", " << v[2][2] << ", " << v[3][2] << "]\n"
    	<< "[" << v[0][3] << ", " << v[1][3] << ", " << v[2][3] << ", " << v[3][3] << "]\n";
}
